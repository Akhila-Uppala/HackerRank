'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}


function countingValleys(n, s) {
    const min = 2;
     const max = 1000000;
     let valleys = 0;
     let isInValley = false; 
     
     s = (typeof s === "string") ? s.split('') : s;
 
     if (s.length >= min
          && s.length <= max
          && n === parseInt(n, 0)
          && n >= min
          && n <= max 
          && n === s.length) {
          
          s = s.map(steps => ((steps === "U") ? 1 : -1));
          
          let path = 0;
          for(let i in s) {
               path += s[i];
               if (path < 0 && !isInValley) {
                    isInValley = true; 
               }
               if (path == 0 && isInValley) {
                    valleys++;
                    isInValley = false;
               }    
          } 
     }
      
     return valleys; 
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const steps = parseInt(readLine().trim(), 10);

    const path = readLine();

    const result = countingValleys(steps, path);

    ws.write(result + '\n');

    ws.end();
}
